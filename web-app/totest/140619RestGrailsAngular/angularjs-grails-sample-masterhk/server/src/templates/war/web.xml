<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" metadata-complete="true"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	<display-name>/@grails.project.key@</display-name>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>

	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>@grails.project.key@</param-value>
	</context-param>

	<filter>
		<filter-name>sitemesh</filter-name>
		<filter-class>org.codehaus.groovy.grails.web.sitemesh.GrailsPageFilter</filter-class>
	</filter>

	<filter>
		<filter-name>charEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>characterEncodingFilter</param-value>
		</init-param>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>CORS Filter</filter-name>
		<filter-class>org.ebaysf.web.cors.CORSFilter</filter-class>
		<init-param>
			<description>A comma separated list of allowed origins. Note: An '*' cannot be used for an allowed origin when using credentials.</description>
			<param-name>cors.allowed.origins</param-name>
			<param-value>http://localhost:8000, http://localhost:8080</param-value>
		</init-param>
		<init-param>
			<description>A comma separated list of HTTP verbs, using which a CORS
				request can be made.</description>
			<param-name>cors.allowed.methods</param-name>
			<param-value>GET,POST,HEAD,OPTIONS,PUT,DELETE</param-value>
		</init-param>
		<init-param>
			<description>A comma separated list of allowed headers when making a non simple CORS request.</description>
			<param-name>cors.allowed.headers</param-name>
			<param-value>Content-Type,X-Requested-With,Authorization,Origin,Access-Control-Request-Method,Access-Control-Request-Headers</param-value>
		</init-param>
		<init-param>
			<description>A comma separated list non-standard response headers that will be exposed to XHR2 object.</description>
			<param-name>cors.exposed.headers</param-name>
			<param-value></param-value>
		</init-param>
		<init-param>
			<description>A flag that suggests if CORS is supported with cookies</description>
			<param-name>cors.support.credentials</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<description>A flag to control logging</description>
			<param-name>cors.logging.enabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<description>Indicates how long (in seconds) the results of a preflight request can be cached in a preflight result cache.</description>
			<param-name>cors.preflight.maxage</param-name>
			<param-value>10</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CORS Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>charEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>sitemesh</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>
	


	<listener>
		<listener-class>org.codehaus.groovy.grails.web.context.GrailsContextLoaderListener</listener-class>
	</listener>

	<!-- Grails dispatcher servlet -->
	<servlet>
		<servlet-name>grails</servlet-name>
		<servlet-class>org.codehaus.groovy.grails.web.servlet.GrailsDispatcherServlet</servlet-class>
		<init-param>
			<param-name>dispatchOptionsRequest</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>

	<!-- The Groovy Server Pages servlet -->
	<servlet>
		<servlet-name>gsp</servlet-name>
		<servlet-class>org.codehaus.groovy.grails.web.pages.GroovyPagesServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>gsp</servlet-name>
		<url-pattern>*.gsp</url-pattern>
	</servlet-mapping>

	<session-config>
		<!-- 30 minutes -->
		<session-timeout>30</session-timeout>
	</session-config>

	<welcome-file-list>
		<!-- The order of the welcome pages is important. JBoss deployment will 
			break if index.gsp is first in the list. -->
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.gsp</welcome-file>
	</welcome-file-list>

</web-app>
